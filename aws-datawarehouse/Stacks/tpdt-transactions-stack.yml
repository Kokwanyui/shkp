AWSTemplateFormatVersion: 2010-09-09
Description: Stack to deploy resources and tasks for bp transaction, spending and redemption


Parameters:
  AWSTeam:
    Type: String
    Default: tpdt
  AWSEnv:
    Type: String
    MinLength: '3'
    MaxLength: '6'
    AllowedPattern: ^dev|prod|uat$
    ConstraintDescription: must be dev, prod, uat
  GlueIamRole:
    Type: String
  GlueVersion:
    Type: String
  GlueDBdw:
    Type: String
  GlueDB01replica:
    Type: String
  S3ArtifactBucket:
    Type: String
  GluejobNumberOfWorkers:
    Type: Number
    Description: number of workers for Glue Job
  S3NameGlueTemporary:
    Type: String
  GlueConnector01replica:
    Type: String
  GlueConnector03redshift:
    Type: String
  CrawlerS3dw:
    Type: String
  CrawlerS3staging:
    Type: String
  S3AthenaResult:
    Type: String
  lambdaIamRole:
    Type: String
  accountid:
    Type: String


Conditions:
  IsNotPrd: !Not
    - !Equals
      - !Ref AWSEnv
      - 'prod'

Resources:
# Creating Glue Jobs - Start
  # Bonus Points Transaction related jobs - Start
  dwBPTransaction:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: !Join
          - ''
          - - "s3://"
            - !Ref S3ArtifactBucket
            - '/Glue/Scripts/'
            - !Ref AWSTeam
            - "_dw_bp_transaction"
      Connections:
        Connections:
          - !Ref GlueConnector01replica
          - !Ref GlueConnector03redshift
      DefaultArguments:
        --env: !Ref AWSEnv
        --TempDir: !Sub 's3://${S3NameGlueTemporary}/'
        --job-bookmark-option: job-bookmark-disable
        --job-language: python
        --enable-metrics: ''
        --write-shuffle-spills-to-s3: true
        --write-shuffle-files-to-s3: true
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: !Ref GlueVersion
      MaxRetries: 0
      Name: !Sub '${AWSTeam}_dw_bp_transaction'
      NumberOfWorkers: 10
      Role: !Ref GlueIamRole
      Timeout: 2880
      WorkerType: G.2X
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: bonus_points_transaction

  AdobePointBalance:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: !Join
          - ''
          - - "s3://"
            - !Ref S3ArtifactBucket
            - '/Glue/Scripts/'
            - !Ref AWSTeam
            - "_adobe_point_balance"
      Connections:
        Connections:
          - !Ref GlueConnector01replica
      DefaultArguments:
        --env: !Ref AWSEnv
        --TempDir: !Sub 's3://${S3AthenaResult}/'
        --job-bookmark-option: job-bookmark-disable
        --job-language: python
        --enable-metrics: ''
        --write-shuffle-spills-to-s3: true
        --write-shuffle-files-to-s3: true
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: 3.0
      MaxRetries: 0
      Name: !Sub '${AWSTeam}_tpdt_adobe_point_balance'
      NumberOfWorkers: 2
      Role: !Ref GlueIamRole
      Timeout: 2880
      WorkerType: G.1X
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: bonus_points_transaction
  # Bonus Points Transaction related jobs - End

  # Spending related jobs - Start
  dwSpending:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: !Join
          - ''
          - - "s3://"
            - !Ref S3ArtifactBucket
            - '/Glue/Scripts/'
            - !Ref AWSTeam
            - "_dw_spending"
      Connections:
        Connections:
          - !Ref GlueConnector01replica
          - !Ref GlueConnector03redshift
      DefaultArguments:
        --env: !Ref AWSEnv
        --TempDir: !Sub 's3://${S3AthenaResult}/'
        --job-bookmark-option: job-bookmark-disable
        --job-language: python
        --enable-metrics: ''
        --write-shuffle-spills-to-s3: true
        --write-shuffle-files-to-s3: true
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: !Ref GlueVersion
      MaxRetries: 0
      Name: !Sub '${AWSTeam}_dw_spending'
      NumberOfWorkers: 12
      Role: !Ref GlueIamRole
      Timeout: 2880
      WorkerType: G.2X
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: spending

  spendingEarnedPoint:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: !Join
          - ''
          - - "s3://"
            - !Ref S3ArtifactBucket
            - '/Glue/Scripts/'
            - !Ref AWSTeam
            - "_spending_earned_points"
      Connections:
        Connections:
          - !Ref GlueConnector01replica
      DefaultArguments:
        --env: !Ref AWSEnv
        --TempDir: !Sub 's3://${S3AthenaResult}/'
        --job-bookmark-option: job-bookmark-disable
        --job-language: python
        --enable-metrics: ''
        --write-shuffle-spills-to-s3: true
        --write-shuffle-files-to-s3: true
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: !Ref GlueVersion
      MaxRetries: 0
      Name: !Sub '${AWSTeam}_spending_earned_points'
      NumberOfWorkers: 6
      Role: !Ref GlueIamRole
      Timeout: 2880
      WorkerType: G.1X
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: spending

  PreShootCoupon:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: !Join
          - ''
          - - "s3://"
            - !Ref S3ArtifactBucket
            - '/Glue/Scripts/'
            - !Ref AWSTeam
            - "_pre_shoot_coupon"
      Connections:
        Connections:
          - !Ref GlueConnector01replica
      DefaultArguments:
        --env: !Ref AWSEnv
        --TempDir: !Sub 's3://${S3AthenaResult}/'
        --job-bookmark-option: job-bookmark-disable
        --job-language: python
        --enable-metrics: ''
        --write-shuffle-spills-to-s3: true
        --write-shuffle-files-to-s3: true
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: 3.0
      MaxRetries: 0
      Name: !Sub '${AWSTeam}_tpdt_pre_shoot_coupon'
      NumberOfWorkers: 2
      Role: !Ref GlueIamRole
      Timeout: 2880
      WorkerType: G.1X
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: spending

  odsMasterData:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: !Join
          - ''
          - - "s3://"
            - !Ref S3ArtifactBucket
            - '/Glue/Scripts/'
            - !Ref AWSTeam
            - "_ods_master_data"
      Connections:
        Connections:
          - !Ref GlueConnector01replica
      DefaultArguments:
        --env: !Ref AWSEnv
        --TempDir: !Sub 's3://${S3NameGlueTemporary}/'
        --job-bookmark-option: job-bookmark-disable
        --job-language: python
        --enable-metrics: ''
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: !Ref GlueVersion
      MaxRetries: 0
      Name: !Sub '${AWSTeam}_ods_master_data'
      NumberOfWorkers: 2
      Role: !Ref GlueIamRole
      Timeout: 2880
      WorkerType: G.1X
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: spending

  dwSpendingBPTranxBackup:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: !Join
          - ''
          - - "s3://"
            - !Ref S3ArtifactBucket
            - '/Glue/Scripts/'
            - !Ref AWSTeam
            - "_dw_spending_bptranx_backup"
      Connections:
        Connections:
          - !Ref GlueConnector03redshift
      DefaultArguments:
        --env: !Ref AWSEnv
        --TempDir: !Sub 's3://${S3AthenaResult}/'
        --job-bookmark-option: job-bookmark-disable
        --job-language: python
        --enable-metrics: ''
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: !Ref GlueVersion
      MaxRetries: 0
      Name: !Sub '${AWSTeam}_dw_spending_bptranx_backup'
      NumberOfWorkers: 10
      Role: !Ref GlueIamRole
      Timeout: 2880
      WorkerType: G.1X
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: spending

  AdobeCoreMallTag:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: !Join
          - ''
          - - "s3://"
            - !Ref S3ArtifactBucket
            - '/Glue/Scripts/'
            - !Ref AWSTeam
            - "_adobe_core_mall_tag"
      Connections:
        Connections:
          - !Ref GlueConnector01replica
      DefaultArguments:
        --env: !Ref AWSEnv
        --TempDir: !Sub 's3://${S3AthenaResult}/'
        --job-bookmark-option: job-bookmark-disable
        --job-language: python
        --enable-metrics: ''
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: 3.0
      MaxRetries: 0
      Name: !Sub '${AWSTeam}_adobe_core_mall_tag'
      NumberOfWorkers: 2
      Role: !Ref GlueIamRole
      Timeout: 2880
      WorkerType: G.1X
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: spending
  # Spending related jobs - End

  # Redemption related jobs - Start
  dwRedemption:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: !Join
          - ''
          - - "s3://"
            - !Ref S3ArtifactBucket
            - '/Glue/Scripts/'
            - !Ref AWSTeam
            - "_dw_redemption"
      Connections:
        Connections:
          - !Ref GlueConnector01replica
      DefaultArguments:
        --env: !Ref AWSEnv
        --TempDir: !Sub 's3://${S3NameGlueTemporary}/'
        --job-bookmark-option: job-bookmark-disable
        --job-language: python
        --enable-metrics: ''
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: !Ref GlueVersion
      MaxRetries: 0
      Name: !Sub '${AWSTeam}_dw_redemption'
      NumberOfWorkers: 4
      Role: !Ref GlueIamRole
      Timeout: 2880
      WorkerType: G.1X
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: redemption

  tpReward:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: !Join
          - ''
          - - "s3://"
            - !Ref S3ArtifactBucket
            - '/Glue/Scripts/'
            - !Ref AWSTeam
            - "_adobe_thepoint_reward_redemption"
      Connections:
        Connections:
          - !Ref GlueConnector01replica
      DefaultArguments:
        --env: !Ref AWSEnv
        --TempDir: !Sub 's3://${S3AthenaResult}/'
        --job-bookmark-option: job-bookmark-disable
        --job-language: python
        --enable-metrics: ''
        --write-shuffle-spills-to-s3: true
        --write-shuffle-files-to-s3: true
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: 3.0
      MaxRetries: 0
      Name: !Sub '${AWSTeam}_adobe_thepoint_reward_redemption'
      NumberOfWorkers: 2
      Role: !Ref GlueIamRole
      Timeout: 2880
      WorkerType: G.1X
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: redemption

  odsPaymentTransaction:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: !Join
          - ''
          - - "s3://"
            - !Ref S3ArtifactBucket
            - '/Glue/Scripts/'
            - !Ref AWSTeam
            - "_ods_payment_transaction"
      Connections:
        Connections:
          - !Ref GlueConnector01replica
      DefaultArguments:
        --env: !Ref AWSEnv
        --TempDir: !Sub 's3://${S3NameGlueTemporary}/'
        --job-bookmark-option: job-bookmark-disable
        --job-language: python
        --enable-metrics: ''
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: !Ref GlueVersion
      MaxRetries: 0
      Name: !Sub '${AWSTeam}_ods_payment_transaction'
      NumberOfWorkers: 4
      Role: !Ref GlueIamRole
      Timeout: 2880
      WorkerType: G.1X
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: payment
  # Redemption related jobs - End

  # Gift Inventory related jobs - Start
  dwGiftInventory:
    Type: AWS::Glue::Job
    Properties:
      Command:
        Name: glueetl
        PythonVersion: '3'
        ScriptLocation: !Join
          - ''
          - - "s3://"
            - !Ref S3ArtifactBucket
            - '/Glue/Scripts/'
            - !Ref AWSTeam
            - "_dw_gift_inventory"
      Connections:
        Connections:
          - !Ref GlueConnector01replica
      DefaultArguments:
        --env: !Ref AWSEnv
        --TempDir: !Sub 's3://${S3NameGlueTemporary}/'
        --job-bookmark-option: job-bookmark-disable
        --job-language: python
        --enable-metrics: ''
      ExecutionProperty:
        MaxConcurrentRuns: 1
      GlueVersion: !Ref GlueVersion
      MaxRetries: 0
      Name: !Sub '${AWSTeam}_dw_gift_inventory'
      NumberOfWorkers: !Ref GluejobNumberOfWorkers
      Role: !Ref GlueIamRole
      Timeout: 2880
      WorkerType: G.1X
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: gift_inventory
  # Gift Inventory related jobs - End
# Creating Glue Jobs - End


# Creating Glue Workflow - Start
  # Transaction Related Workflow - Start
  TransactionGlueWorkflow:
    Type: AWS::Glue::Workflow
    Properties:
      Name: !Join
        - '-'
        - - !Ref AWSTeam
          - transactions
          - turncate
          - !If
            - IsNotPrd
            - !Ref AWSEnv
            - !Ref 'AWS::NoValue'
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: transactions

  SpendingGlueWorkflow:
    Type: AWS::Glue::Workflow
    Properties:
      Name: !Join
        - '-'
        - - !Ref AWSTeam
          - spending
          - turncate
          - !If
            - IsNotPrd
            - !Ref AWSEnv
            - !Ref 'AWS::NoValue'
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: spending

  BackupGlueWorkflow:
    Type: AWS::Glue::Workflow
    Properties:
      Name: !Join
        - '-'
        - - !Ref AWSTeam
          - backup
          - !If
            - IsNotPrd
            - !Ref AWSEnv
            - !Ref 'AWS::NoValue'
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: spending

  AdobeCoreMallTagGlueWorkflow:
    Type: AWS::Glue::Workflow
    Properties:
      Name: !Join
        - '-'
        - - !Ref AWSTeam
          - adobe
          - core
          - mall
          - tag
          - !If
            - IsNotPrd
            - !Ref AWSEnv
            - !Ref 'AWS::NoValue'
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: spending

  # Transaction Related Workflow - End
# Creating Glue Workflow - End


# Creating Glue Trigger - Start
  # Transactions Related Trigger - Start
  SpendingGlueTrigger:
    Type: AWS::Glue::Trigger
    Properties:
      Actions:
        - JobName: !Ref dwSpending
      Name: !Join
        - '-'
        - - !Ref AWSTeam
          - spending
          - schedule
          - !If
            - IsNotPrd
            - !Ref AWSEnv
            - !Ref 'AWS::NoValue'
      Type: "SCHEDULED"
      Schedule: cron(45 17 * * ? *)
      StartOnCreation: true
      WorkflowName: !Ref SpendingGlueWorkflow
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: spending

  TransactionGlueTrigger:
    Type: AWS::Glue::Trigger
    Properties:
      Actions:
        - JobName: !Ref dwRedemption
      Name: !Join
        - '-'
        - - !Ref AWSTeam
          - transactions
          - turncate
          - schedule
          - !If
            - IsNotPrd
            - !Ref AWSEnv
            - !Ref 'AWS::NoValue'
      Type: "SCHEDULED"
      Schedule: cron(45 18 * * ? *)
      StartOnCreation: true
      WorkflowName: !Ref TransactionGlueWorkflow
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: redemption

  odsPaymentTransactionTrigger:
    Type: AWS::Glue::Trigger
    Properties:
      Name: !Join
        - '-'
        - - !Ref AWSTeam
          - odsPaymentTransaction
          - trigger
          - !If
            - IsNotPrd
            - !Ref AWSEnv
            - !Ref 'AWS::NoValue'
      Type: "CONDITIONAL"
      WorkflowName: !Ref TransactionGlueWorkflow
      StartOnCreation: true
      Actions:
        - JobName: !Ref odsPaymentTransaction
      Predicate:
        Conditions:
          - LogicalOperator: EQUALS
            JobName: !Ref dwRedemption
            State: SUCCEEDED
        Logical: AND
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: spending

  dwGiftInventoryTrigger:
    Type: AWS::Glue::Trigger
    Properties:
      Name: !Join
        - '-'
        - - !Ref AWSTeam
          - dwGiftInventory
          - trigger
          - !If
            - IsNotPrd
            - !Ref AWSEnv
            - !Ref 'AWS::NoValue'
      Type: "CONDITIONAL"
      WorkflowName: !Ref TransactionGlueWorkflow
      StartOnCreation: true
      Actions:
        - JobName: !Ref dwGiftInventory
      Predicate:
        Conditions:
          - LogicalOperator: EQUALS
            JobName: !Ref odsPaymentTransaction
            State: SUCCEEDED
        Logical: AND
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: spending

  BpTransactionJobTrigger:
    Type: AWS::Glue::Trigger
    Properties:
      Name: !Join
        - '-'
        - - !Ref AWSTeam
          - bptransaction
          - job
          - trigger
          - !If
            - IsNotPrd
            - !Ref AWSEnv
            - !Ref 'AWS::NoValue'
      Type: "CONDITIONAL"
      Description: "Trigger BP Transaction Job after dwSpening"
      WorkflowName: !Ref TransactionGlueWorkflow
      StartOnCreation: true
      Actions:
        - JobName: !Ref dwBPTransaction
      Predicate:
        Conditions:
          - LogicalOperator: EQUALS
            JobName: !Ref dwGiftInventory
            State: SUCCEEDED
        Logical: AND
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: BP transactions

  MasterDataJobTrigger:
    Type: AWS::Glue::Trigger
    Properties:
      Name: !Join
        - '-'
        - - !Ref AWSTeam
          - masterdata
          - job
          - trigger
          - !If
            - IsNotPrd
            - !Ref AWSEnv
            - !Ref 'AWS::NoValue'
      Type: "CONDITIONAL"
      Description: "Trigger Master Data Job after dwBPTransaction"
      WorkflowName: !Ref TransactionGlueWorkflow
      StartOnCreation: true
      Actions:
        - JobName: !Ref odsMasterData
      Predicate:
        Conditions:
          - LogicalOperator: EQUALS
            JobName: !Ref dwBPTransaction
            State: SUCCEEDED
        Logical: AND
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: BP transactions

  dwCrawlerTrigger:
    Type: AWS::Glue::Trigger
    Properties:
      Name: !Join
        - '-'
        - - !Ref AWSTeam
          - 03dw
          - crawler
          - middle
          - trigger
          - !If
            - IsNotPrd
            - !Ref AWSEnv
            - !Ref 'AWS::NoValue'
      Type: "CONDITIONAL"
      Description: "Trigger dw Crawler after odsMasterData"
      WorkflowName: !Ref TransactionGlueWorkflow
      StartOnCreation: true
      Actions:
        - CrawlerName: !Ref CrawlerS3dw
      Predicate:
        Conditions:
          - LogicalOperator: EQUALS
            JobName: !Ref odsMasterData
            State: SUCCEEDED
        Logical: AND
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions

  AdobePointBalanceJobTrigger:
    Type: AWS::Glue::Trigger
    Properties:
      Name: !Join
        - '-'
        - - !Ref AWSTeam
          - AdobePointBalance
          - job
          - trigger
          - !If
            - IsNotPrd
            - !Ref AWSEnv
            - !Ref 'AWS::NoValue'
      Type: "CONDITIONAL"
      Description: "Trigger Adobe Point Balance Job after dw crawler"
      WorkflowName: !Ref TransactionGlueWorkflow
      StartOnCreation: true
      Actions:
        - JobName: !Ref AdobePointBalance
      Predicate:
        Conditions:
          - LogicalOperator: EQUALS
            CrawlerName: !Ref CrawlerS3dw
            CrawlState: SUCCEEDED
        Logical: AND
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: BP transactions

  PreShootCouponJobTrigger:
    Type: AWS::Glue::Trigger
    Properties:
      Name: !Join
        - '-'
        - - !Ref AWSTeam
          - PreShootCoupon
          - job
          - trigger
          - !If
            - IsNotPrd
            - !Ref AWSEnv
            - !Ref 'AWS::NoValue'
      Type: "CONDITIONAL"
      Description: "Trigger Pre Shoot Coupon Job after dw crawler"
      WorkflowName: !Ref TransactionGlueWorkflow
      StartOnCreation: true
      Actions:
        - JobName: !Ref PreShootCoupon
        - JobName: !Ref tpReward
      Predicate:
        Conditions:
          - LogicalOperator: EQUALS
            JobName: !Ref AdobePointBalance
            State: SUCCEEDED
        Logical: AND
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: spending

  BackupGlueTrigger:
    Type: AWS::Glue::Trigger
    Properties:
      Actions:
        - JobName: !Ref dwSpendingBPTranxBackup
      Name: !Join
        - '-'
        - - !Ref AWSTeam
          - backup
          - schedule
          - !If
            - IsNotPrd
            - !Ref AWSEnv
            - !Ref 'AWS::NoValue'
      Type: "SCHEDULED"
      Schedule: cron(15 00 * * ? *)
      StartOnCreation: true
      WorkflowName: !Ref BackupGlueWorkflow
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: spending

  dwCrawlerBackupTrigger:
    Type: AWS::Glue::Trigger
    Properties:
      Name: !Join
        - '-'
        - - !Ref AWSTeam
          - 03dw
          - crawler
          - backup
          - trigger
          - !If
            - IsNotPrd
            - !Ref AWSEnv
            - !Ref 'AWS::NoValue'
      Type: "CONDITIONAL"
      Description: "Trigger dw Crawler after spending and bp transaction backup"
      WorkflowName: !Ref BackupGlueWorkflow
      StartOnCreation: true
      Actions:
        - CrawlerName: !Ref CrawlerS3dw
      Predicate:
        Conditions:
          - LogicalOperator: EQUALS
            JobName: !Ref dwSpendingBPTranxBackup
            State: SUCCEEDED
        Logical: AND
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions

  AdobeCoreMallTagGlueTrigger:
    Type: AWS::Glue::Trigger
    Properties:
      Actions:
        - JobName: !Ref AdobeCoreMallTag
      Name: !Join
        - '-'
        - - !Ref AWSTeam
          - adobe
          - core
          - mall
          - tag
          - schedule
          - !If
            - IsNotPrd
            - !Ref AWSEnv
            - !Ref 'AWS::NoValue'
      Type: "SCHEDULED"
      Schedule: cron(0 6 ? * SUN *)
      StartOnCreation: true
      WorkflowName: !Ref AdobeCoreMallTagGlueWorkflow
      Tags:
        application: !Ref AWSTeam
        environment: !Ref AWSEnv
        stack: transactions
        BusinessFunction: spending

  # Transactions Related Trigger - End
# Creating Glue Trigger- End

# Creating Lambda Function - Start
  EVChargingRedemption:
    Type: AWS::Lambda::Function
    Properties:
      Description: Extract EV Charging Redemption from DB01 to S3
      FunctionName: !Sub '${AWSTeam}-ev-charging-redemption'
      Runtime: python3.9
      Role: !Ref lambdaIamRole
      Handler: lambda_function.lambda_handler
      Code:
        S3Bucket: !Ref S3ArtifactBucket
        S3Key: Lambda/Functions/ev_charging_redemption.zip
      Timeout: 900
      MemorySize: 10240
      EphemeralStorage:
        Size: 10240
      ReservedConcurrentExecutions: 1
      VpcConfig:
        SecurityGroupIds:
          - sg-09008dc3534447e51
        SubnetIds:
          - subnet-0406aa5bbf9d46605
          - subnet-0768b1e8f3bd1a45b
      Tags:
        - Key: application
          Value: !Ref AWSTeam
        - Key: environment
          Value: !Ref AWSEnv
        - Key: stack
          Value: transactions
      TracingConfig:
        Mode: Active
      Layers:
        - !Sub 'arn:aws:lambda:ap-east-1:${accountid}:layer:tpdt_pandas:1'
        - !Sub 'arn:aws:lambda:ap-east-1:${accountid}:layer:tpdt_SQLAlchemy:1'
        - !Sub 'arn:aws:lambda:ap-east-1:${accountid}:layer:tpdt_pymysql:1'

# Creating Lambda Function - End

  EVChargingRedemptionScheduleEvent:
    Type: AWS::Events::Rule
    Properties:
      Description: "ScheduledRule"
      ScheduleExpression: "cron(30 17 * * ? *)"
      State: "ENABLED"
      Name: !Sub '${AWSTeam}-lambda-EVChargingRedemption'
      Targets:
        - Arn: !GetAtt EVChargingRedemption.Arn
          Id: 'EVChargingRedemption'
          Input: !Sub '{"env": "${AWSEnv}"}'


  EVChargingRedemptionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref EVChargingRedemption
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt EVChargingRedemptionScheduleEvent.Arn